

group 'com.ywl.projectgroup'
version '1.0.0.RELEASE'
apply plugin: 'maven-publish'
apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    maven {
        //maven私服仓库
        url 'http://106.13.99.195:8088/nexus/content/groups/public/'
    }
    mavenCentral()
}

sourceSets.main.java.srcDirs = ['src/main/java/com/ywl/projectgroup/domain',
                                'src/main/java/com/ywl/projectgroup/service']
task apiJar(type: Jar) {
    delete "build/libs/maven-project${version}.jar"
    baseName 'maven-project'
//    source= './src/main/java'
    include('packagepath/domain/*.java',
            'packagepath/service/*.java')

}

task clearJar(type: Delete) {
    delete 'build/libs/maven-project${version}.jar'
}

task makeJar(type:org.gradle.api.tasks.bundling.Jar) {
    //指定生成的jar名
    baseName 'maven-project'
    //从哪里打包class文件
    from('build/classes/java/main/')
    //打包到jar后的目录结构
//    into('org/cmdmac/cloud/pluginsdk/')
    //去掉不需要打包的目录和文件
//    exclude('test/', 'BuildConfig.class', 'R.class')
    //去掉R$开头的文件
//    exclude{ it.name.startsWith('R$');}
    include('com/ywl/projectgroup/domain/*.class',
            'com/ywl/projectgroup/service/*.class')
}

    makeJar.dependsOn(clearJar, classes)

//打包源码
task sourceJar(type: Jar){
    from sourceSets.main.allJava
    include('com/ywl/projectgroup/domain/*.java',
            'com/ywl/projectgroup/service/*.java')
    classifier "sources"
}

publishing {
    publications {
        mypublish(MavenPublication) {
            //指定group/artifact/version信息，可以不填。默认使用项目group/name/version作为groupId/artifactId/version
            groupId = project.group
            artifactId = 'maven-project'
            version = project.version

            //如果是war包填写components.web，如果是jar包填写components.java
//            from components.java  //默认全部代码build后，上传jar
//
//            //配置上传源码
            artifact sourceJar  //指定上传的jar
            artifact makeJar   //指定上传的jar


//            artifact ("build/libs/maven-project-1.0.0.RELEASE.jar")

        }
    }
    repositories {
        maven {
            url = "http://106.13.99.195:8088/nexus/content/repositories/thirdparty"
            //认证用户和密码
            credentials {
                username = 'admin'
                password = 'admin123'
            }
        }
    }
}
